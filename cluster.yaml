apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig

metadata:
  region: eu-west-1
  name: test-kata-fc-2

nodeGroups:
  - name: ng-6
    instanceType: i3.metal
    desiredCapacity: 1
    ssh: {allow: true}
    preBootstrapCommands:
      # override kubelet flags to use containerd runtime
      - |
        mkdir -p /etc/systemd/system/kubelet.service.d
        cat << EOF > /etc/systemd/system/kubelet.service.d/11-containerd.conf
        [Service]
        # Local metadata parameters: REGION, AWS_DEFAULT_REGION
        EnvironmentFile=/etc/eksctl/metadata.env
        # Global and static parameters: CLUSTER_DNS, NODE_LABELS, NODE_TAINTS
        EnvironmentFile=/etc/eksctl/kubelet.env
        # Local non-static parameters: NODE_IP, INSTANCE_ID
        EnvironmentFile=/etc/eksctl/kubelet.local.env
        ExecStart=
        ExecStart=/usr/bin/kubelet \\
          --node-ip=\${NODE_IP} \\
          --node-labels=\${NODE_LABELS},alpha.eksctl.io/instance-id=\${INSTANCE_ID} \\
          --max-pods=\${MAX_PODS} \\
          --register-node=true --register-with-taints=\${NODE_TAINTS} \\
          --cloud-provider=aws \\
          --container-runtime=remote \\
          --container-runtime-endpoint=unix:///run/containerd/containerd.sock \\
          --runtime-request-timeout=15m \\
          --network-plugin=cni \\
          --cni-bin-dir=/opt/cni/bin \\
          --cni-conf-dir=/etc/cni/net.d \\
          --kubeconfig=/etc/eksctl/kubeconfig.yaml \\
          --config=/etc/eksctl/kubelet.yaml

      # ensure containerd can find kata binaries
      - |
        mkdir -p /etc/systemd/system/containerd.service.d
        cat << EOF > /etc/systemd/system/containerd.service.d/11-kata.conf
        [Service]
        Environment=PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/opt/kata/bin
        EOF
        systemctl daemon-reload
        systemctl restart containerd

      - |
        mkdir -p /etc/containerd
        cat << EOF > /etc/containerd/config.toml
        root = "/var/lib/containerd"
        state = "/run/containerd"
        oom_score = 0
        [grpc]
          address = "/run/containerd/containerd.sock"
          uid = 0
          gid = 0
          max_recv_message_size = 16777216
          max_send_message_size = 16777216
        [debug]
          address = ""
          uid = 0
          gid = 0
          level = ""
        [metrics]
          address = ""
          grpc_histogram = false
        [cgroup]
          path = ""
        [plugins]
          [plugins.cgroups]
            no_prometheus = false
          [plugins.cri]
            stream_server_address = "127.0.0.1"
            stream_server_port = "0"
            enable_selinux = false
            sandbox_image = "k8s.gcr.io/pause:3.1"
            stats_collect_period = 10
            systemd_cgroup = true
            enable_tls_streaming = false
            max_container_log_line_size = 16384
            [plugins.cri.containerd]
              snapshotter = "overlayfs"
              no_pivot = false
              [plugins.cri.containerd.default_runtime]
                runtime_type = "io.containerd.runtime.v1.linux"
                runtime_engine = ""
                runtime_root = ""
              [plugins.cri.containerd.untrusted_workload_runtime]
                runtime_type = ""
                runtime_engine = ""
                runtime_root = ""
              [plugins.cri.containerd.runtimes.kata-qemu]
                runtime_type = "io.containerd.kata.v2"
                # with /etc/kata-containers/configuration.toml removed, I tried this:
                #config_path = "/opt/kata/share/defaults/kata-containers/configuration-qemu.toml"
                # and this:
                #ConfigPath = "/opt/kata/share/defaults/kata-containers/configuration-qemu.toml"
                # and this:
                #[plugins.cri.containerd.runtimes.kata-qemu.options]
                #  config_path = "/opt/kata/share/defaults/kata-containers/configuration-qemu.toml"
                # and this:
                #[plugins.cri.containerd.runtimes.kata-qemu.options]
                #  ConfigPath = "/opt/kata/share/defaults/kata-containers/configuration-qemu.toml"
              [plugins.cri.containerd.runtimes.katafc]
                runtime_type = "io.containerd.katafc.v2"
                # with /etc/kata-containers/configuration.toml removed, I tried this:
                #config_path = "/opt/kata/share/defaults/kata-containers/configuration-fc.toml"
                # and this:
                #ConfigPath = "/opt/kata/share/defaults/kata-containers/configuration-fc.toml"
                # and this:
                #[plugins.cri.containerd.runtimes.kata-fc.options]
                #  config_path = "/opt/kata/share/defaults/kata-containers/configuration-fc.toml"
                # and this:
                #[plugins.cri.containerd.runtimes.kata-fc.options]
                #  ConfigPath = "/opt/kata/share/defaults/kata-containers/configuration-fc.toml"
            [plugins.cri.cni]
              bin_dir = "/opt/cni/bin"
              conf_dir = "/etc/cni/net.d"
              conf_template = ""
            [plugins.cri.registry]
              [plugins.cri.registry.mirrors]
                [plugins.cri.registry.mirrors."docker.io"]
                  endpoint = ["https://registry-1.docker.io"]
            [plugins.cri.x509_key_pair_streaming]
              tls_cert_file = ""
              tls_key_file = ""
          [plugins.diff-service]
            default = ["walking"]
          [plugins.linux]
            shim = "containerd-shim"
            runtime = "runc"
            runtime_root = ""
            no_shim = false
            shim_debug = false
          [plugins.opt]
            path = "/opt/containerd"
          [plugins.restart]
            interval = "10s"
          [plugins.scheduler]
            pause_threshold = 0.02
            deletion_threshold = 0
            mutation_threshold = 100
            schedule_delay = "0s"
            startup_delay = "100ms"
        EOF

      # install kata-fc
      - |
        kata_runtime_version="1.10.0"
        arch="$(uname -m)"
        curl --silent --location "https://github.com/kata-containers/runtime/releases/download/${kata_runtime_version}/kata-static-${kata_runtime_version}-${arch}.tar.xz" --output "/tmp/kata.txz"
        tar xJf "/tmp/kata.txz" -C /
        modprobe vhost_vsock
        mkdir -p /etc/kata-containers
        ln -s /opt/kata/share/defaults/kata-containers/configuration-qemu.toml /etc/kata-containers/configuration.toml
        ln -s /opt/kata/bin/containerd-shim-kata-v2 /opt/kata/bin/containerd-shim-katafc-v2

    kubeletExtraConfig:
        cgroupDriver: systemd
        kubeReserved:
            cpu: "300m"
            memory: "300Mi"
            ephemeral-storage: "1Gi"
        kubeReservedCgroup: "/kube-reserved"
        systemReserved:
            cpu: "300m"
            memory: "300Mi"
            ephemeral-storage: "1Gi"
        evictionHard:
            memory.available:  "200Mi"
            nodefs.available: "10%"
        featureGates:
            DynamicKubeletConfig: true
            RotateKubeletServerCertificate: true


        serializeImagePulls: false
        tlsCipherSuites:
          - "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256"
          - "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256"
          - "TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305"
          - "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"
          - "TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305"
          - "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384"
          - "TLS_RSA_WITH_AES_256_GCM_SHA384"
          - "TLS_RSA_WITH_AES_128_GCM_SHA256"
